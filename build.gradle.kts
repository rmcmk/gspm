import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import java.nio.file.StandardOpenOption
import kotlin.io.path.Path
import kotlin.io.path.bufferedWriter
import kotlin.io.path.createDirectories

plugins {
	`kotlin-dsl`
	alias(libs.plugins.gradle.publish)
	alias(libs.plugins.kotlinter)
}

group = "com.github.rmcmk.gspm"
version = "1.0.0-RC3"

dependencies {
    implementation(libs.java.ini.parser)
}

@Suppress("UnstableApiUsage") gradlePlugin {
	website = "https://rmcmk.dev/gspm"
	vcsUrl = "https://github.com/rmcmk/gspm.git"

	plugins {
		create("gspm") {
			displayName = "GSPM - Gradle Submodule Package Manager"
			description = """
				Treats Git Submodules as first class citizens in a Gradle build.
				Provides a version catalog for submodules and a way to manage them.
			""".trimIndent()
			id = "gspm"
			tags = setOf("submodules", "version catalog", "git", "package manager")
			implementationClass = "dev.rmcmk.gspm.gradle.GspmPlugin"
		}
	}
}

tasks.register("generateCoordinateProperties") {
	doLast {
		val root = layout.buildDirectory.get().toString()
		val path = Path(root, "generated", "resources", "main").createDirectories()
		val properties = """
			# Generated by Gradle - do not modify!
			group=${project.group}
			version=${project.version}
			name=${project.name}
		""".trimIndent()
		path.resolve("coordinate.properties").bufferedWriter(
			options = arrayOf(
				StandardOpenOption.CREATE,
				StandardOpenOption.TRUNCATE_EXISTING,
				StandardOpenOption.WRITE
			)
		).use {
			it.write(properties)
		}
	}
}

tasks.withType<KotlinCompile> {
	dependsOn("generateCoordinateProperties")
}
